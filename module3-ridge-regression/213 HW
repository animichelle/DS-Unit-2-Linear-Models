{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"name":"213 HW","provenance":[{"file_id":"https://github.com/LambdaSchool/DS-Unit-2-Linear-Models/blob/master/module3-ridge-regression/LS_DS_213_assignment.ipynb","timestamp":1607019131997}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"V2c06OKNzeV_"},"source":["Lambda School Data Science\n","\n","*Unit 2, Sprint 1, Module 3*\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"7IXUfiQ2UKj6"},"source":["# Ridge Regression\n","\n","## Assignment\n","\n","We're going back to our other **New York City** real estate dataset. Instead of predicting apartment rents, you'll predict property sales prices.\n","\n","But not just for condos in Tribeca...\n","\n","- [ ] Use a subset of the data where `BUILDING_CLASS_CATEGORY` == `'01 ONE FAMILY DWELLINGS'` and the sale price was more than 100 thousand and less than 2 million.\n","- [ ] Do train/test split. Use data from January — March 2019 to train. Use data from April 2019 to test.\n","- [ ] Do one-hot encoding of categorical features.\n","- [ ] Do feature selection with `SelectKBest`.\n","- [ ] Fit a ridge regression model with multiple features. Use the `normalize=True` parameter (or do [feature scaling](https://scikit-learn.org/stable/modules/preprocessing.html) beforehand — use the scaler's `fit_transform` method with the train set, and the scaler's `transform` method with the test set)\n","- [ ] Get mean absolute error for the test set.\n","- [ ] As always, commit your notebook to your fork of the GitHub repo.\n","\n","The [NYC Department of Finance](https://www1.nyc.gov/site/finance/taxes/property-rolling-sales-data.page) has a glossary of property sales terms and NYC Building Class Code Descriptions. The data comes from the [NYC OpenData](https://data.cityofnewyork.us/browse?q=NYC%20calendar%20sales) portal.\n"]},{"cell_type":"code","metadata":{"id":"o9eSnDYhUGD7"},"source":["%%capture\n","import sys\n","\n","# If you're on Colab:\n","if 'google.colab' in sys.modules:\n","    DATA_PATH = 'https://raw.githubusercontent.com/LambdaSchool/DS-Unit-2-Applied-Modeling/master/data/'\n","    !pip install category_encoders==2.*\n","\n","# If you're working locally:\n","else:\n","    DATA_PATH = '../data/'\n","    \n","# Ignore this Numpy warning when using Plotly Express:\n","# FutureWarning: Method .ptp is deprecated and will be removed in a future version. Use numpy.ptp instead.\n","import warnings\n","warnings.filterwarnings(action='ignore', category=FutureWarning, module='numpy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QJBD4ruICm1m"},"source":["import pandas as pd\n","import pandas_profiling\n","\n","# Read New York City property sales data\n","df = pd.read_csv(DATA_PATH+'condos/NYC_Citywide_Rolling_Calendar_Sales.csv')\n","\n","# Change column names: replace spaces with underscores\n","df.columns = [col.replace(' ', '_') for col in df]\n","\n","# SALE_PRICE was read as strings.\n","# Remove symbols, convert to integer\n","df['SALE_PRICE'] = (\n","    df['SALE_PRICE']\n","    .str.replace('$','')\n","    .str.replace('-','')\n","    .str.replace(',','')\n","    .astype(int)\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SVNGzabmzeWA"},"source":["# BOROUGH is a numeric column, but arguably should be a categorical feature,\n","# so convert it from a number to a string\n","df['BOROUGH'] = df['BOROUGH'].astype(str)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q5Vzgka_zeWA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607044188772,"user_tz":300,"elapsed":3322,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"378ad012-00c8-4f57-ced2-b9e7a0c5f385"},"source":["# Reduce cardinality for NEIGHBORHOOD feature\n","\n","# Get a list of the top 10 neighborhoods\n","top10 = df['NEIGHBORHOOD'].value_counts()[:10].index\n","\n","# At locations where the neighborhood is NOT in the top 10, \n","# replace the neighborhood with 'OTHER'\n","df.loc[~df['NEIGHBORHOOD'].isin(top10), 'NEIGHBORHOOD'] = 'OTHER'\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(23040, 21)"]},"metadata":{"tags":[]},"execution_count":123}]},{"cell_type":"code","metadata":{"id":"XyGXaXgqzeWA"},"source":["# Use a subset of the data where BUILDING_CLASS_CATEGORY == '01 ONE FAMILY DWELLINGS'\n","# and the sale price was more than 100 thousand and less than 2 million.\n","\n","\n","df = df.loc[(df['BUILDING_CLASS_CATEGORY'] == '01 ONE FAMILY DWELLINGS') & (df['SALE_PRICE'] > 100000)]\n","df.shape \n","\n","# Clean \n","df['LAND_SQUARE_FEET'] = df['LAND_SQUARE_FEET'].str.replace(',','')\n","df['LAND_SQUARE_FEET'] = df['LAND_SQUARE_FEET'].astype(float)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"Ug4lFOvkMR6F","executionInfo":{"status":"ok","timestamp":1607044188773,"user_tz":300,"elapsed":3314,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"421e61d2-665d-4d0b-9758-83957599deff"},"source":["df['created'] = pd.to_datetime(df['SALE_DATE'], infer_datetime_format=True)\n","df = df.set_index('created')\n","df = df.drop(columns='SALE_DATE')\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BOROUGH</th>\n","      <th>NEIGHBORHOOD</th>\n","      <th>BUILDING_CLASS_CATEGORY</th>\n","      <th>TAX_CLASS_AT_PRESENT</th>\n","      <th>BLOCK</th>\n","      <th>LOT</th>\n","      <th>EASE-MENT</th>\n","      <th>BUILDING_CLASS_AT_PRESENT</th>\n","      <th>ADDRESS</th>\n","      <th>APARTMENT_NUMBER</th>\n","      <th>ZIP_CODE</th>\n","      <th>RESIDENTIAL_UNITS</th>\n","      <th>COMMERCIAL_UNITS</th>\n","      <th>TOTAL_UNITS</th>\n","      <th>LAND_SQUARE_FEET</th>\n","      <th>GROSS_SQUARE_FEET</th>\n","      <th>YEAR_BUILT</th>\n","      <th>TAX_CLASS_AT_TIME_OF_SALE</th>\n","      <th>BUILDING_CLASS_AT_TIME_OF_SALE</th>\n","      <th>SALE_PRICE</th>\n","    </tr>\n","    <tr>\n","      <th>created</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>3</td>\n","      <td>OTHER</td>\n","      <td>01 ONE FAMILY DWELLINGS</td>\n","      <td>1</td>\n","      <td>5495</td>\n","      <td>801</td>\n","      <td>NaN</td>\n","      <td>A9</td>\n","      <td>4832 BAY PARKWAY</td>\n","      <td>NaN</td>\n","      <td>11230.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6800.0</td>\n","      <td>1325.0</td>\n","      <td>1930.0</td>\n","      <td>1</td>\n","      <td>A9</td>\n","      <td>550000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>4</td>\n","      <td>OTHER</td>\n","      <td>01 ONE FAMILY DWELLINGS</td>\n","      <td>1</td>\n","      <td>7918</td>\n","      <td>72</td>\n","      <td>NaN</td>\n","      <td>A1</td>\n","      <td>80-23 232ND STREET</td>\n","      <td>NaN</td>\n","      <td>11427.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2001.0</td>\n","      <td>1940.0</td>\n","      <td>1</td>\n","      <td>A1</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>2</td>\n","      <td>OTHER</td>\n","      <td>01 ONE FAMILY DWELLINGS</td>\n","      <td>1</td>\n","      <td>4210</td>\n","      <td>19</td>\n","      <td>NaN</td>\n","      <td>A1</td>\n","      <td>1260 RHINELANDER AVE</td>\n","      <td>NaN</td>\n","      <td>10461.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3500.0</td>\n","      <td>2043.0</td>\n","      <td>1925.0</td>\n","      <td>1</td>\n","      <td>A1</td>\n","      <td>810000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>OTHER</td>\n","      <td>01 ONE FAMILY DWELLINGS</td>\n","      <td>1</td>\n","      <td>5212</td>\n","      <td>69</td>\n","      <td>NaN</td>\n","      <td>A1</td>\n","      <td>469 E 25TH ST</td>\n","      <td>NaN</td>\n","      <td>11226.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2680.0</td>\n","      <td>1899.0</td>\n","      <td>1</td>\n","      <td>A1</td>\n","      <td>125000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>OTHER</td>\n","      <td>01 ONE FAMILY DWELLINGS</td>\n","      <td>1</td>\n","      <td>7930</td>\n","      <td>121</td>\n","      <td>NaN</td>\n","      <td>A5</td>\n","      <td>5521 WHITTY LANE</td>\n","      <td>NaN</td>\n","      <td>11203.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1710.0</td>\n","      <td>1872.0</td>\n","      <td>1940.0</td>\n","      <td>1</td>\n","      <td>A5</td>\n","      <td>620000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           BOROUGH NEIGHBORHOOD  ... BUILDING_CLASS_AT_TIME_OF_SALE SALE_PRICE\n","created                          ...                                          \n","2019-01-01       3        OTHER  ...                             A9     550000\n","2019-01-01       4        OTHER  ...                             A1     200000\n","2019-01-02       2        OTHER  ...                             A1     810000\n","2019-01-02       3        OTHER  ...                             A1     125000\n","2019-01-02       3        OTHER  ...                             A5     620000\n","\n","[5 rows x 20 columns]"]},"metadata":{"tags":[]},"execution_count":125}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"D_ctvIuVyalg","executionInfo":{"status":"ok","timestamp":1607044188977,"user_tz":300,"elapsed":3512,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"c36ba5c2-5b12-4c16-992d-bfff6e3bea59"},"source":["#target and feature\n","\n","target = 'SALE_PRICE'\n","y = df[target]\n","X = df.drop([target]+['EASE-MENT','ZIP_CODE', 'NEIGHBORHOOD', 'BUILDING_CLASS_CATEGORY',\n","                    'TAX_CLASS_AT_PRESENT', 'BUILDING_CLASS_AT_PRESENT', 'LOT',\n","                    'ADDRESS', 'APARTMENT_NUMBER', 'BLOCK',\n","                    'BUILDING_CLASS_AT_TIME_OF_SALE', 'TAX_CLASS_AT_TIME_OF_SALE'], axis=1) \n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BOROUGH</th>\n","      <th>RESIDENTIAL_UNITS</th>\n","      <th>COMMERCIAL_UNITS</th>\n","      <th>TOTAL_UNITS</th>\n","      <th>LAND_SQUARE_FEET</th>\n","      <th>GROSS_SQUARE_FEET</th>\n","      <th>YEAR_BUILT</th>\n","    </tr>\n","    <tr>\n","      <th>created</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6800.0</td>\n","      <td>1325.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2001.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3500.0</td>\n","      <td>2043.0</td>\n","      <td>1925.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2680.0</td>\n","      <td>1899.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1710.0</td>\n","      <td>1872.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3300.0</td>\n","      <td>1478.0</td>\n","      <td>1925.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2400.0</td>\n","      <td>1280.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>1333.0</td>\n","      <td>1945.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2500.0</td>\n","      <td>1020.0</td>\n","      <td>1935.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1800.0</td>\n","      <td>1224.0</td>\n","      <td>1945.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3232 rows × 7 columns</p>\n","</div>"],"text/plain":["           BOROUGH  RESIDENTIAL_UNITS  ...  GROSS_SQUARE_FEET  YEAR_BUILT\n","created                                ...                               \n","2019-01-01       3                1.0  ...             1325.0      1930.0\n","2019-01-01       4                1.0  ...             2001.0      1940.0\n","2019-01-02       2                1.0  ...             2043.0      1925.0\n","2019-01-02       3                1.0  ...             2680.0      1899.0\n","2019-01-02       3                1.0  ...             1872.0      1940.0\n","...            ...                ...  ...                ...         ...\n","2019-04-30       4                1.0  ...             1478.0      1925.0\n","2019-04-30       4                1.0  ...             1280.0      1930.0\n","2019-04-30       4                1.0  ...             1333.0      1945.0\n","2019-04-30       4                1.0  ...             1020.0      1935.0\n","2019-04-30       4                1.0  ...             1224.0      1945.0\n","\n","[3232 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":126}]},{"cell_type":"code","metadata":{"id":"ckwl2KHjESGl"},"source":["# Do train/test split. January March 2019 - train. April 2019 - test.\n","\n","cutoff = '2019-04-01'\n","mask = X.index < cutoff\n","X_train, y_train = X.loc[mask], y.loc[mask]\n","X_test, y_test = X.loc[~mask], y.loc[~mask]\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7XnFaTySOtED","executionInfo":{"status":"ok","timestamp":1607044188979,"user_tz":300,"elapsed":3505,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"fdd8a15a-3d57-4ef6-e861-ba4326ffa637"},"source":["# Baseline\n","from sklearn.metrics import mean_absolute_error\n","\n","y_pred = [y_train.mean()] * len(y_train)\n","\n","print('price mean', y_train.mean())\n","print('Baseline MAE:', mean_absolute_error(y_train, y_pred))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["price mean 726925.0469720496\n","Baseline MAE: 347239.1791335331\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"liYVdOHDCCdX","executionInfo":{"status":"ok","timestamp":1607048526410,"user_tz":300,"elapsed":351,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"95a843ab-db54-4d11-c929-6872c593aa20"},"source":["# Do one-hot encoding of categorical features.\n","from sklearn.linear_model import LinearRegression\n","from category_encoders import OneHotEncoder\n","import category_encoders as ce\n","\n","\n","encoder = ce.OneHotEncoder(use_cat_names=True)\n","encoder.fit_transform(X_train)\n","XT_train = encoder.transform(X_train)\n","XT_test = encoder.transform(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/category_encoders/utils.py:21: FutureWarning: is_categorical is deprecated and will be removed in a future version.  Use is_categorical_dtype instead\n","  elif pd.api.types.is_categorical(cols):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"c5M-rJGeP6_Q","executionInfo":{"status":"ok","timestamp":1607048528234,"user_tz":300,"elapsed":546,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"10ef24e6-5dba-40fb-c3e6-9257cb9b8ebe"},"source":["XT_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BOROUGH_3</th>\n","      <th>BOROUGH_4</th>\n","      <th>BOROUGH_2</th>\n","      <th>BOROUGH_5</th>\n","      <th>BOROUGH_1</th>\n","      <th>RESIDENTIAL_UNITS</th>\n","      <th>COMMERCIAL_UNITS</th>\n","      <th>TOTAL_UNITS</th>\n","      <th>LAND_SQUARE_FEET</th>\n","      <th>GROSS_SQUARE_FEET</th>\n","      <th>YEAR_BUILT</th>\n","    </tr>\n","    <tr>\n","      <th>created</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6800.0</td>\n","      <td>1325.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2001.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3500.0</td>\n","      <td>2043.0</td>\n","      <td>1925.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2680.0</td>\n","      <td>1899.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1710.0</td>\n","      <td>1872.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2400.0</td>\n","      <td>921.0</td>\n","      <td>1950.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2450.0</td>\n","      <td>2128.0</td>\n","      <td>1980.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4361.0</td>\n","      <td>1807.0</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6000.0</td>\n","      <td>621.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-30</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3910.0</td>\n","      <td>1163.0</td>\n","      <td>1950.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2576 rows × 11 columns</p>\n","</div>"],"text/plain":["            BOROUGH_3  BOROUGH_4  ...  GROSS_SQUARE_FEET  YEAR_BUILT\n","created                           ...                               \n","2019-01-01          1          0  ...             1325.0      1930.0\n","2019-01-01          0          1  ...             2001.0      1940.0\n","2019-01-02          0          0  ...             2043.0      1925.0\n","2019-01-02          1          0  ...             2680.0      1899.0\n","2019-01-02          1          0  ...             1872.0      1940.0\n","...               ...        ...  ...                ...         ...\n","2019-03-29          0          0  ...              921.0      1950.0\n","2019-03-29          0          0  ...             2128.0      1980.0\n","2019-03-29          0          0  ...             1807.0      2018.0\n","2019-03-29          0          0  ...              621.0      1930.0\n","2019-03-30          0          1  ...             1163.0      1950.0\n","\n","[2576 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":157}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"SETDzzR5QB0D","executionInfo":{"status":"ok","timestamp":1607048529013,"user_tz":300,"elapsed":356,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"6ae65692-2ba1-4a66-c31e-1545d2a8921f"},"source":["X_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BOROUGH</th>\n","      <th>RESIDENTIAL_UNITS</th>\n","      <th>COMMERCIAL_UNITS</th>\n","      <th>TOTAL_UNITS</th>\n","      <th>LAND_SQUARE_FEET</th>\n","      <th>GROSS_SQUARE_FEET</th>\n","      <th>YEAR_BUILT</th>\n","    </tr>\n","    <tr>\n","      <th>created</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6800.0</td>\n","      <td>1325.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-01</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2001.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3500.0</td>\n","      <td>2043.0</td>\n","      <td>1925.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4000.0</td>\n","      <td>2680.0</td>\n","      <td>1899.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-01-02</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1710.0</td>\n","      <td>1872.0</td>\n","      <td>1940.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2400.0</td>\n","      <td>921.0</td>\n","      <td>1950.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2450.0</td>\n","      <td>2128.0</td>\n","      <td>1980.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4361.0</td>\n","      <td>1807.0</td>\n","      <td>2018.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-29</th>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>6000.0</td>\n","      <td>621.0</td>\n","      <td>1930.0</td>\n","    </tr>\n","    <tr>\n","      <th>2019-03-30</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>3910.0</td>\n","      <td>1163.0</td>\n","      <td>1950.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2576 rows × 7 columns</p>\n","</div>"],"text/plain":["           BOROUGH  RESIDENTIAL_UNITS  ...  GROSS_SQUARE_FEET  YEAR_BUILT\n","created                                ...                               \n","2019-01-01       3                1.0  ...             1325.0      1930.0\n","2019-01-01       4                1.0  ...             2001.0      1940.0\n","2019-01-02       2                1.0  ...             2043.0      1925.0\n","2019-01-02       3                1.0  ...             2680.0      1899.0\n","2019-01-02       3                1.0  ...             1872.0      1940.0\n","...            ...                ...  ...                ...         ...\n","2019-03-29       5                1.0  ...              921.0      1950.0\n","2019-03-29       5                1.0  ...             2128.0      1980.0\n","2019-03-29       5                1.0  ...             1807.0      2018.0\n","2019-03-29       5                1.0  ...              621.0      1930.0\n","2019-03-30       4                1.0  ...             1163.0      1950.0\n","\n","[2576 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":158}]},{"cell_type":"code","metadata":{"id":"iO6_e8PBTc14"},"source":["# Do feature selection with SelectKBest\n","from sklearn.feature_selection import SelectKBest\n","\n","encoder2 = SelectKBest(k=4)\n","encoder2.fit(XT_train, y_train)\n","XTT_train = encoder2.transform(XT_train)\n","XTT_test = encoder2.transform(XT_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pUbN8oHdVWKS","executionInfo":{"status":"ok","timestamp":1607048530821,"user_tz":300,"elapsed":497,"user":{"displayName":"Ani Bezjian","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjL-U4TcxZaTQnKOFanf2qNL1Iy2VtwRwB2Rsij7A=s64","userId":"11103634306653538797"}},"outputId":"8d29bb5b-8ce1-4b80-c749-e2f1f15d3f6b"},"source":["from sklearn.linear_model import LinearRegression\n","model = LinearRegression()\n","model.fit(XTT_train, y_train)\n","\n","\n","y_pred = model.predict(XTT_train)\n","print(\"training MAE:\", mean_absolute_error(y_train, y_pred))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["training MAE: 278977.7190809734\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SmlX4BhHWUnB"},"source":["# Fit a ridge regression model with multiple features. Use the normalize=True\n","from sklearn.linear_model import Ridge\n","model2 = Ridge(alpha=.01, normalize=True) \n","model2.fit(XT_train, y_train)\n","y_pred = model.predict(XT_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"44vl-aBweWSh"},"source":["# Get mean absolute error for the test set.\n","\n","\n","mae = mean_absolute_error(y_test, y_pred)\n","display(HTML(f'Test Mean Absolute Error: ${mae:,.0f}'))"],"execution_count":null,"outputs":[]}]}